#+TITLE: emacs.d - Ubiquitous
#+AUTHOR: James Conroy-Finn
#+EMAIL: james@logi.cl
#+STARTUP: content
#+OPTIONS: toc:2 num:nil ^:nil
#+LINK: f https://github.com/rejeep/f.el
#+LINK: s https://github.com/magnars/s.el
#+LINK: diminish http://www.eskimo.com/~seldon/diminish.el

* Abstract

Here we setup configuration and packages that are going to be so widely used we
pretend they're built into Emacs.

* s

[[s][s]] provides useful string utility functions.

#+begin_src emacs-lisp
  (require 's)
#+end_src

* f

[[f][f]] is a modern API for working with files and directories.

#+begin_src emacs-lisp
  (require 'f)
#+end_src

* use-package

[[https://github.com/jwiegley/use-package][use-package]] provides a convenient way of grouping common configuration setups
per package.

#+begin_src emacs-lisp
  (eval-when-compile
    (require 'use-package))
#+end_src

* diminish

[[diminish]] helps declutter our modeline by either by removing or abbreviating
minor mode indicators.

#+begin_src emacs-lisp
  (use-package diminish)
#+end_src

* bind-key

#+begin_src emacs-lisp
  (use-package bind-key)
#+end_src

* exec-path-from-shell

[[https://github.com/purcell/exec-path-from-shell][~exec-path-from-shell~]] to pull ~PATH~ configuration from the user's shell.

From the exec-path-from-shell [[https://github.com/purcell/exec-path-from-shell/blob/dccbb54b18950d64885daea9e98e49f15af1f0c9/README.md][README]]:

#+BEGIN_QUOTE
On OS X, an Emacs instance started from the graphical user interface will have a
different environment than a shell in a terminal window, because OS X does not
run a shell during the login. Obviously this will lead to unexpected results
when calling external utilities like make from Emacs.
#+END_QUOTE

#+begin_src emacs-lisp
  (use-package exec-path-from-shell
    :if (memq window-system '(mac ns))
    :init (exec-path-from-shell-initialize)
    :config
    (dolist (var '("GPG_AGENT_INFO"
                   "LANG"
                   "LC_CTYPE"
                   "SSH_AGENT_PID"
                   "SSH_AUTH_SOCK"))
      (add-to-list 'exec-path-from-shell-variables var)))
#+end_src

* guide-key

[[https://github.com/kai2nenobu/guide-key][guide-key]] displays the available key bindings automatically and dynamically.

#+begin_src emacs-lisp
  (use-package guide-key
    :init
    (setq guide-key/guide-key-sequence
          '("C-x r"
            "C-x 4"
            "C-x 5"
            "C-x v"
            "C-c ;"
            "C-c ; f"
            "C-c ' f"
            "C-c h"
            "C-x n"))
    (guide-key-mode 1))
#+end_src
* async

[[https://github.com/jwiegley/emacs-async][async]] is a module for doing asynchronous processing in Emacs.

#+begin_src emacs-lisp
  (use-package async
    :init
    (when (require 'dired-aux)
      (require 'dired-async)))
#+end_src
