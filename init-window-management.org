#+TITLE: emacs.d - Window Management
#+AUTHOR: James Conroy-Finn
#+EMAIL: james@logi.cl
#+STARTUP: content
#+OPTIONS: toc:2 num:nil ^:nil

* Winner

  #+begin_src emacs-lisp
    (winner-mode 1)
  #+end_src

* Prompt for target window

  Make ~C-x o~ prompt for a target window when there are more than
  two.

  #+begin_src emacs-lisp
    (use-package switch-window
      :bind ("C-x o" . switch-window)
      :init
      (setq switch-window-shortcut-style 'alphabet))
  #+end_src

* Show other buffer when splitting

  When splitting window, show (other-buffer) in the new window.

  #+begin_src emacs-lisp
    (defun split-window-func-with-other-buffer (split-function)
      (lexical-let ((s-f split-function))
        (lambda ()
          (interactive)
          (funcall s-f)
          (set-window-buffer (next-window) (other-buffer)))))

    (global-set-key "\C-x2" (split-window-func-with-other-buffer 'split-window-vertically))
    (global-set-key "\C-x3" (split-window-func-with-other-buffer 'split-window-horizontally))
  #+end_src

* Rearrange split windows

  #+begin_src emacs-lisp
    (defun split-window-horizontally-instead ()
      (interactive)
      (save-excursion
        (delete-other-windows)
        (funcall (split-window-func-with-other-buffer 'split-window-horizontally))))

    (defun split-window-vertically-instead ()
      (interactive)
      (save-excursion
        (delete-other-windows)
        (funcall (split-window-func-with-other-buffer 'split-window-vertically))))

    (global-set-key "\C-x|" 'split-window-horizontally-instead)
    (global-set-key "\C-x_" 'split-window-vertically-instead)

    ;; Borrowed from http://postmomentum.ch/blog/201304/blog-on-emacs
    (defun jcf-split-window ()
      "Split the window to see the most recent buffer in the other window.
    Call a second time to restore the original window configuration."
      (interactive)
      (if (eq last-command 'jcf-split-window)
          (progn
            (jump-to-register :jcf-split-window)
            (setq this-command 'jcf-unsplit-window))
        (window-configuration-to-register :jcf-split-window)
        (switch-to-buffer-other-window nil)))

    (global-set-key (kbd "<f7>") 'jcf-split-window)
    (global-set-key (kbd "<f6>")
                    (lambda ()
                      (interactive)
                      (switch-to-buffer nil)))
  #+end_src
